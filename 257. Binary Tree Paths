/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, vector<string>&s,string ans)
    {
        if(!root) return ;
        ans+=to_string(root->val)+"->";
        
        solve(root->left,s,ans);
        solve(root->right,s,ans);
        if(!root->right && !root->left)
        {
             s.push_back(ans.substr(0,ans.length()-2));
        }
       
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string>st;
        string ans="";
        solve(root,st,ans);
        return st;
    }
};
